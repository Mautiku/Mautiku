local packName = _G.AnimPack
local allPacks = {
	Ninja = {
		idle1 = "rbxassetid://656118852", 
		idle2 = "rbxassetid://656118852", 
		walk = "rbxassetid://656121766",
		run = "rbxassetid://656121766",
		jump = "rbxassetid://656117878",
		fall = "rbxassetid://656121934",
		climb = "rbxassetid://656114359"
	},
	Cool = {
		idle1 = "rbxassetid://16738333868",
		idle2 = "rbxassetid://16738334710",
		walk = "rbxassetid://16738340646",
		run = "rbxassetid://16738337225",
		jump = "rbxassetid://104325245285198",
		fall = "rbxassetid://616003713",
		climb = "rbxassetid://18537363391"
	}
}

if type(packName) ~= "string" or not allPacks[packName] then
	warn("[ANIM ERROR] _G.AnimPack ไม่มีหรือพิมพ์ผิด")
	return
end

local selected = allPacks[packName]
local requiredKeys = {"idle1", "idle2", "walk", "run", "jump", "fall", "climb"}
for _, key in pairs(requiredKeys) do
	if not selected[key] or typeof(selected[key]) ~= "string" then
		warn("[ANIM ERROR] \""..packName.."\" ขาด "..key.." หรือ id ผิด")
		return
	end
end

local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local animator = hum:FindFirstChildOfClass("Animator") or Instance.new("Animator", hum)

-- ลบตัวเดิมก่อน
hum:ClearAllChildren()
hum.Animator:Destroy()
Instance.new("Animator", hum)

-- สร้าง animate ใหม่
local animateScript = Instance.new("LocalScript", char)
animateScript.Name = "Animate"
animateScript.Source = [[
local anims = {
	idle = {Anim1 = "]]..selected.idle1..[[", Anim2 = "]]..selected.idle2..[["},
	walk = "]]..selected.walk..[[",
	run = "]]..selected.run..[[",
	jump = "]]..selected.jump..[[",
	fall = "]]..selected.fall..[[",
	climb = "]]..selected.climb..[["
}

local human = script.Parent:WaitForChild("Humanoid")
local animator = human:FindFirstChildOfClass("Animator")
local loaded = {}

for state, data in pairs(anims) do
	if typeof(data) == "table" then
		for i,v in pairs(data) do
			local anim = Instance.new("Animation")
			anim.AnimationId = v
			loaded[state..i] = animator:LoadAnimation(anim)
		end
	else
		local anim = Instance.new("Animation")
		anim.AnimationId = data
		loaded[state] = animator:LoadAnimation(anim)
	end
end

human.Running:Connect(function(speed)
	if speed > 1 then
		loaded.walk:Play()
	else
		loaded.idleAnim1:Play()
	end
end)

human.Jumping:Connect(function()
	loaded.jump:Play()
end)
