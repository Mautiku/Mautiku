local player = game.Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local packName = getgenv().pack or "Default"
local stoppedFlagName = "NoAnimScript_" .. player.UserId

local isStopped = ReplicatedStorage:FindFirstChild(stoppedFlagName) ~= nil
local confirmed = false
local alreadyApplied = false
local firstRun = true

local Packs = {
	Default = {
		idle1 = "rbxassetid://16738333868",
		idle2 = "rbxassetid://16738334710",
		walk = "rbxassetid://16738340646",
		run = "rbxassetid://16738337225",
		jump = "rbxassetid://104325245285198",
		fall = "rbxassetid://616003713",
		climb = "rbxassetid://18537363391"
	},
	Ninja = {
		idle1 = "rbxassetid://656117400",
		idle2 = "rbxassetid://656118341",
		walk = "rbxassetid://656121766",
		run = "rbxassetid://656118852",
		jump = "rbxassetid://656117878",
		fall = "rbxassetid://656115606",
		climb = "rbxassetid://656114359"
	},
	Robot = {
		idle1 = "rbxassetid://616088211",
		idle2 = "rbxassetid://616089559",
		walk = "rbxassetid://616095330",
		run = "rbxassetid://616091570",
		jump = "rbxassetid://616090535",
		fall = "rbxassetid://616092998",
		climb = "rbxassetid://616086039"
	}
}

local function applyAnimPack(char)
	local pack = Packs[packName]
	if not pack then return end

	local animate = char:FindFirstChild("Animate")
	if not animate then return end

	local function set(obj, id)
		if obj then obj.AnimationId = id end
	end

	set(animate:FindFirstChild("idle") and animate.idle:FindFirstChild("Animation1"), pack.idle1)
	set(animate:FindFirstChild("idle") and animate.idle:FindFirstChild("Animation2"), pack.idle2)
	set(animate:FindFirstChild("walk") and animate.walk:FindFirstChild("WalkAnim"), pack.walk)
	set(animate:FindFirstChild("run") and animate.run:FindFirstChild("RunAnim"), pack.run)
	set(animate:FindFirstChild("jump") and animate.jump:FindFirstChild("JumpAnim"), pack.jump)
	set(animate:FindFirstChild("fall") and animate.fall:FindFirstChild("FallAnim"), pack.fall)
	set(animate:FindFirstChild("climb") and animate.climb:FindFirstChild("ClimbAnim"), pack.climb)
end

local function waitForRequired(char)
	local start = tick()
	local hum, animate
	while tick() - start < 3 do
		hum = hum or char:FindFirstChild("Humanoid")
		animate = animate or char:FindFirstChild("Animate")
		if hum and animate then return hum, animate end
		task.wait()
	end
	return hum, animate
end

local function handleCharacter(char)
	if isStopped or not confirmed or alreadyApplied then return end
	local hum = char:FindFirstChild("Humanoid") or char:WaitForChild("Humanoid", 1)
	local animate = char:FindFirstChild("Animate") or char:WaitForChild("Animate", 1)
	if not hum or not animate then
		hum, animate = waitForRequired(char)
	end
	if hum and animate then
		applyAnimPack(char)
		alreadyApplied = true
		if firstRun then
			firstRun = false
			hum.Health = 0
		end
	end
end

local function startWatchdog()
	RunService.Heartbeat:Connect(function()
		if isStopped or not confirmed then return end
		if player.Character and not alreadyApplied then
			if player.Character:FindFirstChild("Animate") and player.Character:FindFirstChild("Humanoid") then
				handleCharacter(player.Character)
			end
		end
	end)
end

local function askToRun()
	if isStopped then return end

	local bindable = Instance.new("BindableFunction")
	bindable.OnInvoke = function(response)
		if response == "Yes" then
			confirmed = true
			if player.Character then
				handleCharacter(player.Character)
			end
		end
	end

	StarterGui:SetCore("SendNotification", {
		Title = "Run Script?",
		Text = "ใช้ animation pack '" .. packName .. "' มั้ย?",
		Duration = 10,
		Callback = bindable,
		Button1 = "Yes",
		Button2 = "No"
	})
end

player.Chatted:Connect(function(msg)
	if msg:lower() == "/e stop" then
		isStopped = true
		if not ReplicatedStorage:FindFirstChild(stoppedFlagName) then
			local flag = Instance.new("BoolValue")
			flag.Name = stoppedFlagName
			flag.Parent = ReplicatedStorage
		end
		StarterGui:SetCore("SendNotification", {
			Title = "Script Stopped",
			Text = "จะไม่รัน script นี้อีก",
			Duration = 4
		})
	end
end)

player.CharacterAdded:Connect(function(char)
	alreadyApplied = false
	handleCharacter(char)

	RunService.Heartbeat:Connect(function()
		if not isStopped then
			local humanoid = char:FindFirstChild("Humanoid")
			if humanoid and humanoid.MoveDirection.Magnitude > 0 then
				applyAnimPack(char)
			end
		end
	end)

	char.DescendantAdded:Connect(function(desc)
		if not alreadyApplied and (desc.Name == "Animate" or desc.Name == "Humanoid") then
			handleCharacter(char)
		end
	end)
end)

if player.Character then
	handleCharacter(player.Character)
end

startWatchdog()
askToRun()
